package my.group.resample;

import com.aliyun.odps.data.Record;
import com.aliyun.odps.mapred.Reducer;

import java.io.IOException;
import java.util.Iterator;

/**
 * Reducer模板。请用真实逻辑替换模板内容
 */
public class MyReducer implements Reducer {
	private Record result;

	public void setup(TaskContext context) throws IOException {
		result = context.createOutputRecord();
	}

	public void reduce(Record key, Iterator<Record> values, TaskContext context)
			throws IOException {
		while (values.hasNext()) {
			Record val = values.next();
			result.set(0, key.getString("user_id"));
			result.set(1, key.getString("item_id"));
			int feature_num = 8;
//			for (int j = 0; j < feature_num; ++j)
//				val.get(j);
			 result.set(2, val.getDouble("uir1"));
			 result.set(3, val.getDouble("uir2"));
			 result.set(4, val.getDouble("uir3"));
			 result.set(5, val.getDouble("uir4"));
			 result.set(6, val.getDouble("uir5"));
			 result.set(7, val.getDouble("uir6"));
			 result.set(8, val.getDouble("uir7"));
			 result.set(9, val.getDouble("uir8"));
			 result.set(10, val.getDouble("uic1"));
			 result.set(11, val.getDouble("uic2"));
			 result.set(12, val.getDouble("uic3"));
			 result.set(13, val.getDouble("uic4"));
			 result.set(14, val.getDouble("uicr1"));
			 result.set(15, val.getDouble("uicr2"));
			 result.set(16, val.getDouble("uicr3"));
			 result.set(17, val.getDouble("uif1"));
			 result.set(18, val.getDouble("uif2"));
			 result.set(19, val.getDouble("uif3"));
			 result.set(20, val.getDouble("uif4"));
			result.set(21, val.getBigint("is_buy"));
			int is_buy = Integer.valueOf(String.valueOf(val.getBigint("is_buy")));
			if (is_buy == 1) {
<<<<<<< HEAD
				int resample_cnt = 20;
=======
				int resample_cnt = 18;
>>>>>>> 4cd4c9b38155b03a9e9c0f357052176823e561c7
				for (int i = 0; i < resample_cnt; ++i)
					context.write(result);
			} else
				context.write(result);
		}
	}

	public void cleanup(TaskContext arg0) throws IOException {

	}
}
